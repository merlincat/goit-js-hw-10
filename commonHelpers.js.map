{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate;\nconst startButton = document.querySelector('[data-start]');\nconst inputPicker = document.querySelector('#datetime-picker');\nconst daysElement = document.querySelector('[data-days]');\nconst hoursElement = document.querySelector('[data-hours]');\nconst minutesElement = document.querySelector('[data-minutes]');\nconst secondsElement = document.querySelector('[data-seconds]');\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  startButton.disabled = true;\n});\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    // Обробка події закриття вікна вибору дати\n    if (selectedDates.length > 0) {\n      userSelectedDate = selectedDates[0];\n      validateSelectedDate(userSelectedDate);\n    }\n  },\n};\n\n// Ініціалізуйте Flatpickr з переданими параметрами\nconst datetimePicker = flatpickr(inputPicker, options);\n\nfunction validateSelectedDate(date) {\n  const currentDate = new Date();\n\n  if (date < currentDate) {\n    // Виведення повідомлення про помилку\n    iziToast.error({\n      title: 'Error',\n      message: 'Please choose a date in the future',\n      position: 'topCenter',\n    });\n\n    // Деактивація кнопки \"Start\", якщо обрана дата в минулому\n    startButton.disabled = true;\n    inputPicker.disabled = false;\n  } else {\n    // Активація кнопки \"Start\", якщо обрана дата в майбутньому\n    startButton.disabled = false;\n    inputPicker.disabled = true;\n  }\n}\n\nlet countdownInterval;\nfunction updateTimer() {\n  const currentDate = new Date();\n  const targetDate = datetimePicker.selectedDates[0];\n  const timeDifference = targetDate - currentDate;\n\n  if (timeDifference < 0) {\n    clearInterval(countdownInterval);\n    startButton.disabled = false;\n    inputPicker.disabled = false;\n\n    daysElement.textContent = '00';\n    hoursElement.textContent = '00';\n    minutesElement.textContent = '00';\n    secondsElement.textContent = '00';\n    iziToast.success({\n      title: 'Success',\n      message: 'Countdown timer has ended!',\n      position: 'topCenter',\n    });\n    return;\n  }\n\n  const { days, hours, minutes, seconds } = convertMs(timeDifference);\n\n  daysElement.textContent = formatTime(days);\n  hoursElement.textContent = formatTime(hours);\n  minutesElement.textContent = formatTime(minutes);\n  secondsElement.textContent = formatTime(seconds);\n}\n\nfunction startCountdown() {\n  if (datetimePicker.selectedDates.length === 0) {\n    iziToast.alert({\n      title: 'Alert',\n      message: 'Please select a valid date and time.',\n      position: 'topCenter',\n    });\n    return;\n  }\n\n  countdownInterval = setInterval(updateTimer, 1000);\n  updateTimer();\n  startButton.disabled = true;\n}\n\nfunction formatTime(time) {\n  return time < 10 ? `0${time}` : time;\n}\n\nstartButton.addEventListener('click', startCountdown);\n"],"names":["userSelectedDate","startButton","inputPicker","daysElement","hoursElement","minutesElement","secondsElement","convertMs","ms","days","hours","minutes","seconds","options","selectedDates","validateSelectedDate","datetimePicker","flatpickr","date","currentDate","iziToast","countdownInterval","updateTimer","timeDifference","formatTime","startCountdown","time"],"mappings":"2GAKA,IAAIA,EACJ,MAAMC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAc,SAAS,cAAc,kBAAkB,EACvDC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAE9D,SAAS,iBAAiB,mBAAoB,IAAM,CAClDL,EAAY,SAAW,EACzB,CAAC,EACD,SAASM,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAEjBA,EAAc,OAAS,IACzBd,EAAmBc,EAAc,GACjCC,EAAqBf,CAAgB,EAExC,CACH,EAGMgB,EAAiBC,EAAUf,EAAaW,CAAO,EAErD,SAASE,EAAqBG,EAAM,CAClC,MAAMC,EAAc,IAAI,KAEpBD,EAAOC,GAETC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,WAChB,CAAK,EAGDnB,EAAY,SAAW,GACvBC,EAAY,SAAW,KAGvBD,EAAY,SAAW,GACvBC,EAAY,SAAW,GAE3B,CAEA,IAAImB,EACJ,SAASC,GAAc,CACrB,MAAMH,EAAc,IAAI,KAElBI,EADaP,EAAe,cAAc,GACZG,EAEpC,GAAII,EAAiB,EAAG,CACtB,cAAcF,CAAiB,EAC/BpB,EAAY,SAAW,GACvBC,EAAY,SAAW,GAEvBC,EAAY,YAAc,KAC1BC,EAAa,YAAc,KAC3BC,EAAe,YAAc,KAC7BC,EAAe,YAAc,KAC7Bc,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,6BACT,SAAU,WAChB,CAAK,EACD,MACD,CAED,KAAM,CAAE,KAAAX,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUgB,CAAc,EAElEpB,EAAY,YAAcqB,EAAWf,CAAI,EACzCL,EAAa,YAAcoB,EAAWd,CAAK,EAC3CL,EAAe,YAAcmB,EAAWb,CAAO,EAC/CL,EAAe,YAAckB,EAAWZ,CAAO,CACjD,CAEA,SAASa,GAAiB,CACxB,GAAIT,EAAe,cAAc,SAAW,EAAG,CAC7CI,EAAS,MAAM,CACb,MAAO,QACP,QAAS,uCACT,SAAU,WAChB,CAAK,EACD,MACD,CAEDC,EAAoB,YAAYC,EAAa,GAAI,EACjDA,IACArB,EAAY,SAAW,EACzB,CAEA,SAASuB,EAAWE,EAAM,CACxB,OAAOA,EAAO,GAAK,IAAIA,IAASA,CAClC,CAEAzB,EAAY,iBAAiB,QAASwB,CAAc"}